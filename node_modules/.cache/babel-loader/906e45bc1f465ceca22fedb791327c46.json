{"ast":null,"code":"var _jsxFileName = \"/Users/dustinhuth/coding/redux-tutorial/learn-redux2/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'; //Create STORE -> globalized state\n//ACTION -> give it a name that represents what you want the action to do (ex: increment).  Action is a function that returns an object\n\nconst increment = () => {\n  return {\n    type: 'INCREMENT'\n  };\n};\n\nconst decrement = () => {\n  return {\n    type: 'DECREMENT'\n  };\n}; //REDUCER -> updates the STORE\n\n\nconst reducer = (state = 0, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return state + 1;\n  }\n}; //DISPATCH - sends action to Reducer\n\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/dustinhuth/coding/redux-tutorial/learn-redux2/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","increment","type","decrement","reducer","state","action","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,WAAR,QAA0B,OAA1B,C,CAEA;AAEA;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAEpB,SAAM;AACFC,IAAAA,IAAI,EAAC;AADH,GAAN;AAIH,CAND;;AAQA,MAAMC,SAAS,GAAG,MAAM;AAEpB,SAAM;AACFD,IAAAA,IAAI,EAAC;AADH,GAAN;AAIH,CAND,C,CAQA;;;AAEA,MAAME,OAAO,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AACnC,UAAOA,MAAM,CAACJ,IAAd;AACI,SAAK,WAAL;AACA,aAAOG,KAAK,GAAG,CAAf;AAFJ;AAKH,CAND,C,CAQA;;;AAGAR,QAAQ,CAACU,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAV,aAAa,CAACW,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux'\n\n//Create STORE -> globalized state\n\n//ACTION -> give it a name that represents what you want the action to do (ex: increment).  Action is a function that returns an object\n\nconst increment = () => {\n\n    return{\n        type:'INCREMENT'\n\n    }\n}\n\nconst decrement = () => {\n\n    return{\n        type:'DECREMENT'\n\n    }\n}\n\n//REDUCER -> updates the STORE\n\nconst reducer = (state = 0, action) => {\n    switch(action.type ){\n        case \"INCREMENT\":\n        return state + 1\n    }\n\n}\n\n//DISPATCH - sends action to Reducer\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}